<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>数据结构--邻接表</title>
      <link href="/2023/11/25/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-%E9%82%BB%E6%8E%A5%E8%A1%A8/"/>
      <url>/2023/11/25/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-%E9%82%BB%E6%8E%A5%E8%A1%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="今天讲图的邻接表"><a href="#今天讲图的邻接表" class="headerlink" title="今天讲图的邻接表"></a>今天讲图的邻接表</h1><h2 id="图的存储"><a href="#图的存储" class="headerlink" title="图的存储"></a>图的存储</h2><h3 id="邻接表存储"><a href="#邻接表存储" class="headerlink" title="邻接表存储"></a>邻接表存储</h3><p>核心思想：对具有 n 个顶点的图，建立 n 个线性链表来存储该图</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">build_adjlist</span><span class="params">(AgjListc Gga)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="图的遍历"><a href="#图的遍历" class="headerlink" title="图的遍历"></a>图的遍历</h2><p>深度遍历dfs，广度遍历bfs</p><h3 id="深度优先搜索"><a href="#深度优先搜索" class="headerlink" title="深度优先搜索"></a>深度优先搜索</h3><p>原则：从图中某个指定的顶点出发，先访问顶点 v ，然后从顶点 v 未被访问过的一个邻接点出发，继续进行深度优先遍历，知道与 v 相通的所有顶点都被访问；此时图中若还有未被访问过的顶点，则从另一个未被访问过的顶点出发重复上述过程，直到遍历全图</p><h3 id="广度优先遍历（洪泛算法）"><a href="#广度优先遍历（洪泛算法）" class="headerlink" title="广度优先遍历（洪泛算法）"></a>广度优先遍历（洪泛算法）</h3><p>原则：从 v 出发，先遍历所有与 v 相通的顶点，再对每个顶点广度</p><h3 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h3><p>要有一个标记是否访问过的数组</p><h3 id="深度优先搜索代码"><a href="#深度优先搜索代码" class="headerlink" title="深度优先搜索代码"></a>深度优先搜索代码</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">dfs</span><span class="params">(AdjList g, <span class="type">int</span> v0)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;[%d]&quot;</span>, v0);</span><br><span class="line">    Visited[v0] == <span class="number">1</span>; <span class="comment">// 标记 v0 已经访问过</span></span><br><span class="line">    p = g[v0].link; <span class="comment">// 找 v0 的第一个邻接点</span></span><br><span class="line">    <span class="keyword">while</span>(p -&gt; next != <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(Visited[p -&gt; adjvex] == <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            dfs(g, p-&gt;adjvex);</span><br><span class="line">        &#125;</span><br><span class="line">        p = p -&gt; next;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="广度优先查找某点到起始点的路径长度"><a href="#广度优先查找某点到起始点的路径长度" class="headerlink" title="广度优先查找某点到起始点的路径长度"></a>广度优先查找某点到起始点的路径长度</h3><h3 id="为迷宫寻找最短路径"><a href="#为迷宫寻找最短路径" class="headerlink" title="为迷宫寻找最短路径"></a>为迷宫寻找最短路径</h3>]]></content>
      
      
      <categories>
          
          <category> 课堂笔记 </category>
          
          <category> 数据结构 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 小杜的 </tag>
            
            <tag> 课堂笔记 </tag>
            
            <tag> 数据结构 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第十四次课-同步时序逻辑电路化简状态</title>
      <link href="/2023/11/24/%E7%AC%AC%E5%8D%81%E5%9B%9B%E6%AC%A1%E8%AF%BE/"/>
      <url>/2023/11/24/%E7%AC%AC%E5%8D%81%E5%9B%9B%E6%AC%A1%E8%AF%BE/</url>
      
        <content type="html"><![CDATA[<h1 id="5-3同步时序逻辑电路的设计"><a href="#5-3同步时序逻辑电路的设计" class="headerlink" title="5.3同步时序逻辑电路的设计"></a>5.3同步时序逻辑电路的设计</h1><h2 id="二、状态化简"><a href="#二、状态化简" class="headerlink" title="二、状态化简"></a>二、状态化简</h2><ul><li>同步时序逻辑电路使用 <strong>触发器</strong> 组成储存电路，状态数 <strong>N</strong> 将直接决定电路中所需要的触发器数量 <strong>m</strong></li><li>$2^m-1$ &lt; N &lt;&#x3D; $2^m$</li><li>目的：得到最简状态图和最简状态表</li></ul><h3 id="1-完全定义状态表的化简"><a href="#1-完全定义状态表的化简" class="headerlink" title="1.完全定义状态表的化简"></a>1.完全定义状态表的化简</h3><h4 id="（1）化简的原理"><a href="#（1）化简的原理" class="headerlink" title="（1）化简的原理"></a>（1）化简的原理</h4><ol><li><p>等效状态和等效类</p></li><li><p>（$S_i$, $S_j$）等效对</p></li><li><blockquote><p>根据原始状态表判断等效状态的方法</p><p>满足：</p><ul><li>输出相同</li><li>a次态相同，b次态交错或者为各自的现态，c次态循环或为等效对（满足a,b,c任何一个）</li></ul></blockquote></li><li><p>等效状态有传递性</p></li><li><p>等效类：彼此等效的状态形成的集合</p></li><li><p>最大等效类：一个等效类不是其他等效类的子集</p></li></ol><h4 id="（2）利用隐含表进行状态化简"><a href="#（2）利用隐含表进行状态化简" class="headerlink" title="（2）利用隐含表进行状态化简"></a>（2）利用隐含表进行状态化简</h4><h5 id=""><a href="#" class="headerlink" title="&lt;1&gt;"></a>&lt;1&gt;</h5><p>原始状态表 —-(隐含表)—-&gt; 寻找等效状态对 —-(传递性)—-&gt; 等效类(最大等效类)—-(状态合并)—-&gt; 最小化状态表</p><h5 id="寻找等效对。"><a href="#寻找等效对。" class="headerlink" title="&lt;2&gt;寻找等效对。"></a>&lt;2&gt;寻找等效对。</h5><p>首先进行顺序比较，然后关联比较</p><blockquote><p>三种情况：确定等效√   确定不等效 ×  不确定 填写相关的状态对</p></blockquote><h5 id="求最大等效类"><a href="#求最大等效类" class="headerlink" title="&lt;3&gt;求最大等效类"></a>&lt;3&gt;求最大等效类</h5><blockquote><p>不应该出现相同的元素</p></blockquote><h5 id="做出最小状态表"><a href="#做出最小状态表" class="headerlink" title="&lt;4&gt; 做出最小状态表"></a>&lt;4&gt; 做出最小状态表</h5><h3 id="2-不完全定义状态表的化简"><a href="#2-不完全定义状态表的化简" class="headerlink" title="2.不完全定义状态表的化简"></a>2.不完全定义状态表的化简</h3><h4 id="（1）相容状态和相容类"><a href="#（1）相容状态和相容类" class="headerlink" title="（1）相容状态和相容类"></a>（1）相容状态和相容类</h4><h5 id="相容状态定义"><a href="#相容状态定义" class="headerlink" title="&lt;1&gt;相容状态定义"></a>&lt;1&gt;相容状态定义</h5><blockquote><p>假设状态 $S_i$ 和 $S_j$ 是不完全状态表中的两个状态，如果 <em>对于所有有效的输入序列，分别从 $S_i$ 和 $S_j$ 出发，做得到的输出相应序列完全相同（初步确定的那些位外）</em>，则状态 $S_i$ 和 $S_j$ 是相容的。</p></blockquote><h5 id="判断相容对"><a href="#判断相容对" class="headerlink" title="&lt;2&gt;判断相容对"></a>&lt;2&gt;判断相容对</h5><blockquote><ol><li>输出完全相同，或者一个（或两个）输出不确定</li><li>a次态相同  b次态交错或者是各自的现态  c次态循环或者是相容对  d次态中有不确定状态</li></ol></blockquote><p><strong>相容状态不具有传递性</strong></p><h5 id="相容类或者最大相容类"><a href="#相容类或者最大相容类" class="headerlink" title="&lt;3&gt;相容类或者最大相容类"></a>&lt;3&gt;相容类或者最大相容类</h5><ul><li>彼此相容的状态构成的集合，称为相容类</li><li>若一个相容类不是其他相容类的自己，则称此相容类为最大相容类</li></ul><h4 id="（2）不完全定义状态表的化简"><a href="#（2）不完全定义状态表的化简" class="headerlink" title="（2）不完全定义状态表的化简"></a>（2）不完全定义状态表的化简</h4><ol><li><p>利用隐含表，寻找相容对</p></li><li><p>利用状态合并图，寻找最大相容类</p><p><strong>状态合并图</strong> ： 快速找最大相容类的工具</p><ul><li>圆周上均匀分布的点 —– 表示状态</li><li>点间连线 —– 表示相容关系</li><li>所有点之间均有连线的多边形（即任一点和其他店均有连线） —– 为相容类或者二最大相容类</li></ul></li><li><p>利用闭覆盖表，求最小闭覆盖</p><blockquote><p>闭合性：所选相容类集合中任意相容类，在原始状态表各种输入条件下产生的次态属于该相容类集合的某一个相容类</p></blockquote></li><li><p>做出最小状态表</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 课堂笔记 </category>
          
          <category> 数电 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 小杜的 </tag>
            
            <tag> 数电 </tag>
            
            <tag> 课堂笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第十三次课-同步时序逻辑电路初始状态图/表</title>
      <link href="/2023/11/24/%E7%AC%AC%E5%8D%81%E4%B8%89%E6%AC%A1%E8%AF%BE/"/>
      <url>/2023/11/24/%E7%AC%AC%E5%8D%81%E4%B8%89%E6%AC%A1%E8%AF%BE/</url>
      
        <content type="html"><![CDATA[<h1 id="5-3同步时序逻辑电路的设计"><a href="#5-3同步时序逻辑电路的设计" class="headerlink" title="5.3同步时序逻辑电路的设计"></a>5.3同步时序逻辑电路的设计</h1><ul><li>基本任务：根据给定的功能描述，设计出相应的逻辑电路</li></ul><blockquote><ol><li>根据功能要求建立原始状态图和状态表</li><li>状态化简（消去多余状态）</li><li>状态分配（状态编码）</li><li>求输出函数和激励函数表达式</li><li>根据输出函数和激励函数的表达式画出逻辑电路</li></ol></blockquote><h2 id="一、建立原始状态图和状态表"><a href="#一、建立原始状态图和状态表" class="headerlink" title="一、建立原始状态图和状态表"></a>一、建立原始状态图和状态表</h2><blockquote><p>原始状态图（表）：根据逻辑功能的文字描述，直接建立起来的状态图（表）</p><ul><li>对设计要求的最原始的抽象，是设计电路的初始依据</li></ul></blockquote><h3 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h3><p>建立原始状态图和原始状态表要从四个方面着手：</p><ol><li>确定电路模型（Mealy型还是Moore型）</li><li>设立电路初始状态</li><li>根据需要记忆的信息来增加新的状态</li><li>确定各个时刻电路的输出（在不同输入条件下，要确定输出）</li></ol><p>由于在开始时不知道要描述多少个状态，在原始状态表和原始状态图中一般用字母或者数字表示</p><blockquote><p>模⑤加1加2计数器（记满五个状态后，输出 1 ）</p><ol><li><p>有五个状态设为0，1，2，3，4，初始状态设0</p></li><li></li></ol><table><thead><tr><th align="center">现态</th><th align="center">次态，输出</th><th align="center">次态，输出</th></tr></thead><tbody><tr><td align="center"></td><td align="center">x &#x3D; 0</td><td align="center">x &#x3D; 1</td></tr><tr><td align="center">0</td><td align="center">1&#x2F;0</td><td align="center">2&#x2F;0</td></tr><tr><td align="center">1</td><td align="center">2&#x2F;0</td><td align="center">4&#x2F;0</td></tr><tr><td align="center">2</td><td align="center">3&#x2F;0</td><td align="center">1&#x2F;0</td></tr><tr><td align="center">3</td><td align="center">4&#x2F;0</td><td align="center">3&#x2F;0</td></tr><tr><td align="center">4</td><td align="center">0&#x2F;1</td><td align="center">0&#x2F;1</td></tr></tbody></table><ol start="3"><li><em>如果初始状态变成 3 ，那么 x &#x3D; 0时，再回到 3 才输出 1</em></li></ol></blockquote><blockquote><p>序列检测器（检测 011）</p><h4 id="Mealy"><a href="#Mealy" class="headerlink" title="Mealy"></a>Mealy</h4><ol><li>由于状态数未知，设初始状态为A，A为与检测序列无关的序列</li><li>如果第一位输入1，我们想要的是0，次态还是A</li><li>如果从 A 状态检测到了0，变成状态B</li><li>从 B 检测 0，变为状态 B</li><li>从 B 检测 1，变成状态 C</li><li>从 C 检测 0，变成状态 B</li><li>从 C 检测 1，变成状态 D，输出1</li><li>从 D 检测 0，变成状态 B</li><li>从 D 检测 1，变成状态 A</li></ol><h4 id="Moore"><a href="#Moore" class="headerlink" title="Moore"></a>Moore</h4><ol><li>设 A 为初始状态，与检测序列无关</li><li>B表示检测到了 : 0, C : 01, C : 011</li><li>A&#x2F;0  B&#x2F;0  C&#x2F;0  D&#x2F;1</li></ol></blockquote><blockquote><p>炸弹引爆（检测 1111），炸掉后无次态</p><ol><li>设 A 为初始状态， B，C，D分别表示 1， 11， 111</li><li><img src="./image-20231122092034707.png" alt="image-20231122092034707" style="zoom:50%;" /><img src="./image-20231122092146265.png" alt="image-20231122092146265" style="zoom: 67%;" /></li></ol></blockquote><blockquote><p>检测串行输入的 8421BCD码是否合法，不合法输出 1</p><h4 id="Mealy-1"><a href="#Mealy-1" class="headerlink" title="Mealy"></a>Mealy</h4><p><em>串行码字检测和序列检测最大的区别就是串行码字检测时分组进行的，每组的检测过程相同。当码字最后一位输入后，电路转向为初始状态进行下一组检测，因此是Mealy型</em></p><img src="./image-20231122094218323.png" alt="image-2023112209214135" style="zoom: 67%;" /></blockquote>]]></content>
      
      
      <categories>
          
          <category> 课堂笔记 </category>
          
          <category> 数电 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 小杜的 </tag>
            
            <tag> 数电 </tag>
            
            <tag> 课堂笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vhdl秒表代码注释-第一部分</title>
      <link href="/2023/11/20/vhdl%E7%A7%92%E8%A1%A8%E4%BB%A3%E7%A0%81%E6%B3%A8%E9%87%8A-%E7%AC%AC%E4%B8%80%E9%83%A8%E5%88%86/"/>
      <url>/2023/11/20/vhdl%E7%A7%92%E8%A1%A8%E4%BB%A3%E7%A0%81%E6%B3%A8%E9%87%8A-%E7%AC%AC%E4%B8%80%E9%83%A8%E5%88%86/</url>
      
        <content type="html"><![CDATA[<h1 id="vhdl秒表代码"><a href="#vhdl秒表代码" class="headerlink" title="vhdl秒表代码"></a>vhdl秒表代码</h1><h2 id="关键字"><a href="#关键字" class="headerlink" title="关键字"></a>关键字</h2><h3 id="architecture"><a href="#architecture" class="headerlink" title="architecture"></a>architecture</h3><p>结构体描述设计实体内部的特性。结构体的书写格式如下：</p><blockquote><p>architecture 结构名字 of 实体名 is:<br>    内部信号、常量、数据类型、函数等的定义;<br>begin:<br>    若干并行执行语句，具体描述结构体的功能和行为。<br>end 结构体名;</p></blockquote><ul><li>结构体内要求使用<strong>并行执行语句</strong>。</li><li>类似 <strong>if</strong> 之类的顺序执行语句，只要将它们放在进程语句 <strong>process</strong> 语句之内即可。process语句是并行执行语句。</li></ul><h3 id="library"><a href="#library" class="headerlink" title="library"></a>library</h3><blockquote><p>库用于存放预先编译好的程序包</p><p>程序包中定义了数据结构体、操作逻辑和原件等。主要是声明在设计或者实体中将用到的常数，数据类型，原件，子程序等。</p></blockquote><h3 id="signal信号"><a href="#signal信号" class="headerlink" title="signal信号"></a>signal信号</h3><blockquote><p>信号表示逻辑门的输入或者输出</p><p>类似于连接线，也可以表达存储元件的状态。</p><p>信号通常在结构体，程序包和实体中说明</p></blockquote><figure class="highlight vhdl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 信号定义语句： signal 信号名 : 数据类型 := 初始值</span></span><br><span class="line"><span class="keyword">signal</span> clock : <span class="built_in">bit</span> = <span class="string">&#x27;0&#x27;</span>; <span class="comment">-- 定义时钟信号的数据类型，初始值为0</span></span><br><span class="line"><span class="keyword">signal</span> count : <span class="built_in">BIT_VECTOR</span>(<span class="number">3</span> <span class="keyword">DOWNTO</span> <span class="number">0</span>); <span class="comment">-- 定义 count 为四位位矢量</span></span><br></pre></td></tr></table></figure><figure class="highlight vhdl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 信号赋值语句： 目标信号名 &lt;= 表达式;</span></span><br><span class="line">x &lt;= <span class="number">9</span>;</span><br><span class="line">Z &lt;= x <span class="keyword">after</span> <span class="number">5</span> ns; <span class="comment">-- 在 5ns 后将 x 赋值给 Z</span></span><br></pre></td></tr></table></figure><h3 id="process"><a href="#process" class="headerlink" title="process"></a>process</h3><p>​process语句通常称之为进程语句，本质上他描述了一个功能独立的电路块；</p><p>​process语句是一个并行执行的语句，但是process内部是顺序执行语句</p><blockquote><p>[ 进程名: ] process (敏感信号1，敏感信号2，… ，敏感信号n)<br>    [ 若干变量说明语句 ]<br>    begin<br>    [ 若干顺序说明语句]<br>    end process [ 进程名 ];</p></blockquote><ul><li>由于结构体中各并行执行语句都是独立的电路块，因此不允许两个或者两个以上的并行语句对对同一个信号赋值。</li></ul><h3 id="variable"><a href="#variable" class="headerlink" title="variable"></a>variable</h3><blockquote><p>变量只能在进程语句、函数语句和过程语句结构中使用。变量的赋值是直接的，非预制的，分配给变量的值立即成为当前值，变量不能表达“连线”或者存储元件，不能设置传输延迟量</p></blockquote><figure class="highlight vhdl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 变量定义语句： variable 变量名 ：数据类型 := 初始值；</span></span><br><span class="line"><span class="keyword">variable</span> count : <span class="built_in">integer</span> <span class="number">0</span> <span class="keyword">to</span> <span class="number">255</span> := <span class="number">20</span>;</span><br><span class="line"><span class="comment">-- 定义变量 count 整数变量，变化范围是 2~255，出初始值是 20；</span></span><br></pre></td></tr></table></figure><figure class="highlight vhdl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 变量赋值语句： 变量名 := 表达式</span></span><br><span class="line">x := <span class="number">10.0</span>;</span><br><span class="line">y = <span class="number">1.5</span> + x;</span><br><span class="line">A(<span class="number">3</span> <span class="keyword">to</span> <span class="number">6</span>) := (<span class="string">&quot;1101&quot;</span>); <span class="comment">-- 一个矢量的赋值</span></span><br></pre></td></tr></table></figure><h2 id="数据类型转换"><a href="#数据类型转换" class="headerlink" title="数据类型转换"></a>数据类型转换</h2><p>​VHDL 是强定义类型语言，不同类型的数据不能进行运算和直接赋值</p><figure class="highlight vhdl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 类型表记法</span></span><br><span class="line"><span class="keyword">variable</span> A : <span class="built_in">integer</span>;</span><br><span class="line"><span class="keyword">variable</span> B : real;</span><br><span class="line"><span class="comment">-- real 实数</span></span><br><span class="line">A = <span class="built_in">integer</span>(B);</span><br><span class="line">B = real(A);</span><br></pre></td></tr></table></figure><figure class="highlight vhdl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 函数法</span></span><br><span class="line">Conv_Integer(A);</span><br><span class="line"><span class="comment">-- 由 std_logic 转换为 integer 类型，在 std_logic_unsigned 包中。</span></span><br></pre></td></tr></table></figure><h2 id="常用语句"><a href="#常用语句" class="headerlink" title="常用语句"></a>常用语句</h2><h3 id="case"><a href="#case" class="headerlink" title="case"></a>case</h3><blockquote><p>case 语句是顺序执行语句，常用于描述总线的行为、编译器和译码器的结构以及状态机等等。case 语句的可读性好，非常简洁4</p></blockquote><blockquote><p>case 条件表达式 is:<br>when 条件表达式值1 &#x3D;&gt;<br>    若干顺序执行语句<br>when 条件表达式值2 &#x3D;&gt;<br>    若干顺序执行语句<br>……<br>when 条件表达式值n &#x3D;&gt;<br>    若干顺序执行语句<br>when others &#x3D;&gt;<br>    若干顺序执行语句<br>end case;</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 花自向阳开 </category>
          
          <category> 数电VHDL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 花自向阳开 </tag>
            
            <tag> 小杜的 </tag>
            
            <tag> 数电 </tag>
            
            <tag> VHDL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>markdown基本使用</title>
      <link href="/2023/10/25/markdown%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/"/>
      <url>/2023/10/25/markdown%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="markdown基本使用"><a href="#markdown基本使用" class="headerlink" title="markdown基本使用"></a>markdown基本使用</h1><h2 id="1-标题"><a href="#1-标题" class="headerlink" title="1. 标题"></a>1. 标题</h2><ul><li><p>标题有一级标题到六级标题</p></li><li><p>代码形式</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">一级标题：<span class="comment"># + &#x27;内容&#x27;</span></span><br><span class="line">二级标题：<span class="comment">## + &#x27;内容&#x27;</span></span><br><span class="line">三级标题：<span class="comment">### + &#x27;内容&#x27;</span></span><br><span class="line">……</span><br><span class="line">六级标题：<span class="comment">###### + &#x27;内容&#x27;</span></span><br></pre></td></tr></table></figure></li><li><p>注意 # 和 ’内容‘ 之间有空格</p></li><li><p>显示样式</p><h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4><h5 id="五级标题"><a href="#五级标题" class="headerlink" title="五级标题"></a>五级标题</h5><h6 id="六级标题"><a href="#六级标题" class="headerlink" title="六级标题"></a>六级标题</h6></li></ul><h2 id="2-字体"><a href="#2-字体" class="headerlink" title="2. 字体"></a>2. 字体</h2><h3 id="斜体："><a href="#斜体：" class="headerlink" title="斜体："></a>斜体：</h3><ul><li><p>代码形式：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">*斜体*</span><br></pre></td></tr></table></figure></li><li><p>显示样式：</p><p><em>斜体</em></p></li></ul><h3 id="加粗："><a href="#加粗：" class="headerlink" title="加粗："></a>加粗：</h3><ul><li><p>代码形式：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">**加粗**</span><br></pre></td></tr></table></figure></li><li><p>显示样式：</p><p><strong>加粗</strong></p></li></ul><h3 id="加粗斜体："><a href="#加粗斜体：" class="headerlink" title="加粗斜体："></a>加粗斜体：</h3><ul><li><p>代码形式：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">***加粗斜体***</span><br></pre></td></tr></table></figure></li><li><p>显示样式：</p><p><em><strong>加粗斜体</strong></em></p></li></ul><h3 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h3><ul><li><p>代码样式：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">~~删除~~</span><br></pre></td></tr></table></figure></li><li><p>显示样式：</p><p><del>删除</del></p></li></ul><h2 id="3-引用"><a href="#3-引用" class="headerlink" title="3. 引用"></a>3. 引用</h2><ul><li><p>代码样式：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; 引用（有空格）</span><br></pre></td></tr></table></figure></li><li><p>显示样式：</p><blockquote><p>引用</p></blockquote></li></ul><h2 id="4-分割线"><a href="#4-分割线" class="headerlink" title="4. 分割线"></a>4. 分割线</h2><ul><li><p>代码样式：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">or </span><br><span class="line">***</span><br></pre></td></tr></table></figure></li><li><p>显示样式：</p></li></ul><hr><hr><hr><hr><h2 id="5-图片"><a href="#5-图片" class="headerlink" title="5. 图片"></a>5. 图片</h2><h3 id="本地图片："><a href="#本地图片：" class="headerlink" title="本地图片："></a>本地图片：</h3><ul><li><p>代码样式：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![自命名照片的名字](照片的地址)</span><br></pre></td></tr></table></figure></li><li><p>显示样式：<br><img src="/F16D808895D92E6ED21170D8F287122A.jpg" alt="图片"></p></li></ul><h3 id="网络图片："><a href="#网络图片：" class="headerlink" title="网络图片："></a>网络图片：</h3><ul><li><p>代码样式：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![自命名照片的名字](照片的链接)</span><br></pre></td></tr></table></figure></li><li><p>显示样式：</p></li></ul><p><img src="https://th.bing.com/th/id/R.466bb61cd7cf4e8b7d9cdf645add1d6e?rik=YRZKRLNWLutoZA&riu=http://222.186.12.239:10010/wmxs_161205/002.jpg&ehk=WEy01YhyfNzzQNe1oIqxwgbTnzY7dMfmZZHkqpZB5WI=&risl=&pid=ImgRaw&r=0" alt="002"></p><h2 id="6-超链接"><a href="#6-超链接" class="headerlink" title="6. 超链接"></a>6. 超链接</h2><ul><li><p>代码形式：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[自命名链接的名字](链接)</span><br></pre></td></tr></table></figure></li><li><p>显示样式：<br><a href="?????">链接</a></p></li></ul><h2 id="7-列表"><a href="#7-列表" class="headerlink" title="7. 列表"></a>7. 列表</h2><h3 id="有序列表："><a href="#有序列表：" class="headerlink" title="有序列表："></a>有序列表：</h3><ul><li><p>代码样式：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1. 001</span><br><span class="line">2. 002</span><br><span class="line">3. 003</span><br></pre></td></tr></table></figure></li><li><p>显示样式：</p><ol><li>001</li><li>002</li><li>003</li></ol></li></ul><h3 id="无序列表："><a href="#无序列表：" class="headerlink" title="无序列表："></a>无序列表：</h3><ul><li><p>代码样式：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">- 001</span><br><span class="line">- 002</span><br><span class="line">- 003</span><br><span class="line">- </span><br></pre></td></tr></table></figure></li><li><p>显示样式：</p><ul><li>001</li><li>002</li><li>003</li><li></li></ul></li></ul><h2 id="8-表格"><a href="#8-表格" class="headerlink" title="8. 表格"></a>8. 表格</h2><ul><li><p>代码样式：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">| name  | age  | sex  |</span><br><span class="line">| ----- | ---- | ---- |</span><br><span class="line">| Jerry | 19   | 女   |</span><br><span class="line">| Tom   | 21   | 男   |</span><br><span class="line">| ……    | ……   | ……   |</span><br><span class="line">| ……    | ……   |      |</span><br><span class="line">| ……    |      |      |</span><br><span class="line">|       |      |      |</span><br></pre></td></tr></table></figure></li><li><p>显示样式：</p></li></ul><table><thead><tr><th>name</th><th>age</th><th>sex</th></tr></thead><tbody><tr><td>Jerry</td><td>19</td><td>女</td></tr><tr><td>Tom</td><td>21</td><td>男</td></tr><tr><td>……</td><td>……</td><td>……</td></tr><tr><td>……</td><td>……</td><td></td></tr><tr><td>……</td><td></td><td></td></tr><tr><td></td><td></td><td></td></tr></tbody></table><ul><li>快捷键： Ctrl + T</li></ul><h2 id="8-代码"><a href="#8-代码" class="headerlink" title="8.代码"></a>8.代码</h2><h3 id="单行代码："><a href="#单行代码：" class="headerlink" title="单行代码："></a>单行代码：</h3><ul><li><p>代码样式：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">`hello`</span><br></pre></td></tr></table></figure></li><li><p>显示样式：</p><p><code>hello</code></p></li></ul><h3 id="多行代码："><a href="#多行代码：" class="headerlink" title="多行代码："></a>多行代码：</h3><ul><li><p>代码样式：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">``` java</span><br><span class="line">public class Main &#123;</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        System.out.print(<span class="string">&quot;Hello and welcome!&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (int i = 1; i &lt;= 5; i++) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;i = &quot;</span> + i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">```</span><br></pre></td></tr></table></figure></li><li><p>显示样式：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        System.out.print(<span class="string">&quot;Hello and welcome!&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt;= <span class="number">5</span>; i++) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;i = &quot;</span> + i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> 花自向阳开 </category>
          
          <category> markdown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 花自向阳开 </tag>
            
            <tag> 小杜的 </tag>
            
            <tag> markdown </tag>
            
        </tags>
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title>加密内容</title>
      <link href="/Agreement/index.html"/>
      <url>/Agreement/index.html</url>
      
        <content type="html"><![CDATA[<div class="timeline undefined"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>2023</p></div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>11-27</p></div></div><div class='timeline-item-content'><pre><code>x:1800y:13 小刘乖乖吃饭z:9m:1小杜发夹购买券:3</code></pre></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>11-26</p></div></div><div class='timeline-item-content'><pre><code>x:1800y:11 支使老婆接水-1z:9 买发夹-1 走路+7m:1</code></pre></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>11-23</p></div></div><div class='timeline-item-content'><pre><code>x:1800y:12z:3m:1</code></pre></div></div></div>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>关于</title>
      <link href="/about/index.html"/>
      <url>/about/index.html</url>
      
        <content type="html"><![CDATA[<div class="timeline undefined"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>2023</p></div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>11-24</p></div></div><div class='timeline-item-content'><p>带若若第一次吃海底捞</p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>11-23</p></div></div><div class='timeline-item-content'><p>小杜和小刘小破站正式运行</p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>11-23</p></div></div><div class='timeline-item-content'><p>小杜和小刘的第一个’宝宝’ 杜沃若 出生</p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>11-13</p></div></div><div class='timeline-item-content'><p>小刘给小杜编毛毯</p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>11-10</p></div></div><div class='timeline-item-content'><p>通关《双人成行》</p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>05-20</p></div></div><div class='timeline-item-content'><p>小杜给小刘捡了一大捧茉莉花花</p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>04-23</p></div></div><div class='timeline-item-content'><p>小刘给小杜做郁金香蛋糕</p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>04-15</p></div></div><div class='timeline-item-content'><p>看郁金香and做戒指</p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>04-14</p></div></div><div class='timeline-item-content'><p>小刘陪小杜修手机</p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>03-25</p></div></div><div class='timeline-item-content'><p>铃芽之旅</p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>03-12</p></div></div><div class='timeline-item-content'><p>小杜四级考试（小刘六级）</p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>03-03</p></div></div><div class='timeline-item-content'><p>陪小刘看午夜场电影</p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>03-02</p></div></div><div class='timeline-item-content'><p>小杜的新身份–小刘的老婆</p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>03-01</p></div></div><div class='timeline-item-content'><p>小刘晚上陪小杜写物理实验</p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>03-01</p></div></div><div class='timeline-item-content'><p>小刘凌晨偷偷表白</p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>02-28</p></div></div><div class='timeline-item-content'><p>小刘带小杜吃驴肉火烧</p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>02-28</p></div></div><div class='timeline-item-content'><p>小杜给小刘带绿色的花花</p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>02-26</p></div></div><div class='timeline-item-content'><p>小刘带小杜看电影</p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>02-23</p></div></div><div class='timeline-item-content'><p>给小刘送小蛋糕</p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>02-11</p></div></div><div class='timeline-item-content'><p>小杜和小刘的开学会面</p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>01-21</p></div></div><div class='timeline-item-content'><p>小刘给小杜发漂亮的新年红包</p></div></div></div><div class="timeline undefined"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>2022</p></div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>12-08</p></div></div><div class='timeline-item-content'><p>小杜把小刘的智能车车寄到河南</p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>11-30</p></div></div><div class='timeline-item-content'><p>小杜把小刘的智能车车带回山东</p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>11-18</p></div></div><div class='timeline-item-content'><p>疫情来袭</p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>10-22</p></div></div><div class='timeline-item-content'><p>小刘和小杜的遇见</p></div></div></div>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>分类</title>
      <link href="/categories/index.html"/>
      <url>/categories/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>标签</title>
      <link href="/tags/index.html"/>
      <url>/tags/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>友情链接</title>
      <link href="/link/index.html"/>
      <url>/link/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
  
</search>
